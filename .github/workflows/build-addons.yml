# .github/workflows/build-addons.yml
name: Build & Publish HAOS Add-ons

on:
  push:
    branches: [main]
    paths:
      - "addon-postgres-pgvector/**/**"
      - ".github/workflows/build-addons.yml"
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'If "true", build only (no push)'
        required: false
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        addon: [postgres_pgvector, postgres_pgvector_tester]

    env:
      DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
      BUILDX_NO_DEFAULT_ATTESTATIONS: 1 # remove unknown/unknown image in Github UI

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up and use custom Buildx builder
        run: |
          docker buildx create --use --name custom-builder --driver docker-container --platform linux/amd64,linux/arm64 --buildkitd-flags '--debug'
          docker buildx inspect --bootstrap

      - name: Check for "image" in config.json
        id: config_check
        run: |
          echo "${{ matrix.addon }}/config.json for an 'image' field..."
          if jq -e '.image' ${{ matrix.addon }}/config.json >/dev/null 2>&1; then
            echo "skip=false" >> $GITHUB_OUTPUT
          else
            echo "skip=true" >> $GITHUB_OUTPUT
          fi

      - name: Skip notice
        if: steps.config_check.outputs.skip == 'true'
        run: echo "⚠️ ${{ matrix.addon }} has no 'image' property; skipping build."

      - name: Log in to GHCR
        if: env.DRY_RUN == 'false' && steps.config_check.outputs.skip == 'false'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug List Buildx builders
        run: docker buildx ls

      - name: Build & push "${{ matrix.addon }}"
        if: steps.config_check.outputs.skip == 'false'
        uses: docker/build-push-action@v4
        with:
          builder: custom-builder
          context: ./${{ matrix.addon }}
          file: ./${{ matrix.addon }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ env.DRY_RUN == 'false' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.addon }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.addon }}:${{ github.sha }}
          build-args: |
            BUILD_FROM=alpine:latest
